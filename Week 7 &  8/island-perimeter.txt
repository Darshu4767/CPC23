class Solution {
public:
    int dfs(vector<vector<int>>& grid, int i, int j)
    {
        if(i<0 || j<0 || i>=grid.size() || j>=grid[0].size() || grid[i][j]<1)
        {
            return 0;
        }
        int ans=0;
        if(i>0)
            ans+=abs(grid[i-1][j]);
        if(j>0)
            ans+=abs(grid[i][j-1]);
        if(i<grid.size()-1)
            ans+=abs(grid[i+1][j]);
        if(j<grid[0].size()-1)
            ans+=abs(grid[i][j+1]);
        grid[i][j]=-1;
        return 4-ans+dfs(grid, i-1, j)+dfs(grid, i,j-1)+dfs(grid, i+1, j)+dfs(grid, i,j+1);
    }
    int islandPerimeter(vector<vector<int>>& grid) {
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
            {
                if(grid[i][j])
                    return dfs(grid, i , j);
            }
        }
        return 0;
    }

};